## H2 Console
https://dico.me/java/articles/241


## Spring Boot + JPA 
https://daddyprogrammer.org/post/2695/springboot2-simple-jpa-board/





1. 2018년, 2019년 각 연도별 합계금액이 가장 많은 고객을 추출.
select
	year
    , b.acct_name
    , b.acct_no
    , a.sumAmt
from(
	select
		acct_no
		,  year
		,  sumAmt
		, ROW_NUMBER() OVER(PARTITION BY year ORDER BY sumAmt DESC) as RowIdx
	from(
	    select 
			acct_no
			, left(trnsct_date,4) as  year
			, sum(amt-commission) sumAmt
		from  transaction 
		where cancle_yn = 'N'
		group by acct_no, left(trnsct_date,4)
	) 
) a, account b
where RowIdx = 1
and a.acct_no = b.acct_no
order by year

2. 2018년 또는 2019년에 거래가 없는 고객을 추출

select
	'2018' as year
	, a.acct_name
	, a.acct_no
from account a
left outer join (
	select
		acct_no
		, left(trnsct_date,4) as year
  	from transaction
	where left(trnsct_date,4) = '2018'
  	group by acct_no, left(trnsct_date,4)
	order by year
)b
on a.acct_no = b.acct_no
where b.acct_no is null
union all
select
	'2019' as year
	, a.acct_name
	, a.acct_no
from account a
left outer join (
	select
		acct_no
		, left(trnsct_date,4) as year
  	from transaction
	where left(trnsct_date,4) = '2019'
  	group by acct_no, left(trnsct_date,4)
	order by year
)b
on a.acct_no = b.acct_no
where b.acct_no is null



3. 연도별 관리점별 거래금액 합계를 구하고 합계금액이 큰 순서대로 출력
select
	left(trnsct_date,4) as  year
	, c.br_name
	, c.br_code
	, sum(amt-commission) sumAmt
from transaction a
left join account b
	on a.acct_no = b.acct_no
left join branch c
	on b.br_code = c.br_code
where a.cancle_yn = 'N'
group by left(trnsct_date,4), c.br_code, c.br_name
order by year,  sumAmt desc


4. 지점명을 입력하면 해당지점의 거래금액 합계를 출력.